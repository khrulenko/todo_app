{"version":3,"sources":["context.jsx","components/TodoItem/TodoItem.jsx","components/ToDoList/ToDoList.jsx","components/Footer/Footer.jsx","components/Accept/Accept.jsx","App.js","index.js"],"names":["Context","React","createContext","TodoItem","todo","changeTodoStatus","useContext","removeTodo","changeTodoTitle","filters","useState","isBeingEdited","setIsBeingEdited","title","newTitleToSet","setNewTitleToSet","className","completed","Completed","type","checked","onChange","id","onDoubleClick","onClick","name","value","autoFocus","event","target","focus","onKeyDown","key","preventDefault","trim","length","endEditing","onBlur","endEditingByBlur","ToDoList","toDosToShow","map","Footer","todos","setTodos","active","statusToShow","setStatusToShow","href","All","Active","Accept","setIsAcceptVisible","changeAllTodosStatus","App","newTitle","setNewToDoTitle","isAcceptVisible","filter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","Provider","todoId","statusToSet","placeholder","Date","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5224a265.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Context = React.createContext();\n","import React, { useState, useContext } from 'react';\nimport { Context } from '../../context';\n\nexport const TodoItem = ({ todo }) => {\n  const { changeTodoStatus } = useContext(Context);\n  const { removeTodo } = useContext(Context);\n  const { changeTodoTitle } = useContext(Context);\n  const { filters } = useContext(Context);\n\n  const [isBeingEdited, setIsBeingEdited] = useState(false);\n  const [newTitleToSet, setNewTitleToSet] = useState(todo.title);\n\n  function endEditing(event) {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      if (newTitleToSet.trim().length > 0) {\n        changeTodoTitle(todo.id, newTitleToSet);\n      } else {\n        setNewTitleToSet(todo.title);\n      }\n      setIsBeingEdited(false);\n    }\n\n    if (event.key === 'Escape') {\n      setIsBeingEdited(false);\n    }\n  }\n\n  function endEditingByBlur(event) {\n    if (newTitleToSet.trim().length > 0) {\n      changeTodoTitle(todo.id, newTitleToSet);\n    } else {\n      setNewTitleToSet(todo.title);\n    }\n    setIsBeingEdited(false);\n\n    if (event.key === 'Escape') {\n      setIsBeingEdited(false);\n    }\n  }\n\n  return (\n    <>\n      <li\n        key={todo.id}\n        className={(\n          todo.completed ? filters.Completed : ''\n          ) + (\n            isBeingEdited ? ' editing ' : ''\n        )}\n      >\n\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            onChange={() => changeTodoStatus(todo.id)}\n          />\n          <label\n            onDoubleClick={() => setIsBeingEdited(true)}\n          >\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => removeTodo(todo.id)}\n          />\n        </div>\n\n        {isBeingEdited && (\n          <input\n            type=\"text\"\n            className=\"edit\"\n            id=\"editingInput\"\n            name=\"editInput\"\n            value={newTitleToSet}\n            autoFocus\n            onChange={(event) => setNewTitleToSet(event.target.value)}\n            focus={true}\n            onKeyDown={(event) => endEditing(event)}\n            onBlur={(event) => endEditingByBlur(event)}\n          />\n        )}\n\n      </li>\n    </>\n  );\n}\n","import React from 'react';\nimport { TodoItem } from '../TodoItem';\n\nexport const ToDoList = ({ toDosToShow }) => {\n\n  return (\n    <ul className=\"todo-list\">\n      {toDosToShow.map(todo => (\n       <TodoItem todo={todo}/>\n      ))}\n    </ul>\n  );\n}\n","import React from 'react';\n\nexport const Footer = ({\n  todos,\n  filters,\n  setTodos,\n  active,\n  statusToShow,\n  setStatusToShow,\n}) => {\n\n  return (\n    <footer className=\"footer\">\n\n      <span className=\"todo-count\">\n        {active.length}\n        {' '}\n        items left\n      </span>\n\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={statusToShow === filters.All ? 'selected' : ''}\n            onClick={() => setStatusToShow(filters.All)}\n            onKeyDown={(event) => {\n              event.preventDefault();\n              setStatusToShow(filters.All);\n            }}\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={statusToShow === filters.Active ? 'selected' : ''}\n            onClick={() => setStatusToShow(filters.Active)}\n            onKeyDown={(event) => {\n              event.preventDefault();\n              setStatusToShow(filters.Active);\n            }}\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={statusToShow === filters.Completed ? 'selected' : ''}\n            onClick={() => setStatusToShow(filters.Completed)}\n            onKeyDown={(event) => {\n              event.preventDefault();\n              setStatusToShow(filters.Completed);\n            }}\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n\n      {(active.length !== todos.length) && (\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={() => setTodos(active)}\n        >\n          Clear completed\n        </button>\n      )}\n\n    </footer>\n  );\n}\n","import React from 'react';\n\nexport const Accept = ({\n  setIsAcceptVisible,\n  changeAllTodosStatus\n}) => {\n\n  return (\n    <div\n     className=\"accept-container\"\n    >\n\n      <div\n        className=\"accept\"\n      >\n\n        <p\n          className=\"accept__text\"\n        >\n          Mark all as:\n        </p>\n\n        <div\n          className=\"accept__buttons\"\n        >\n          <button\n            className=\"accept__button\"\n            onClick={() => {\n              changeAllTodosStatus(true);\n              setIsAcceptVisible(false);\n            }}\n          >\n            completed\n          </button>\n\n          <button\n            className=\"accept__button\"\n            onClick={() => {\n              changeAllTodosStatus(false);\n              setIsAcceptVisible(false);\n            }}\n          >\n            active\n          </button>\n\n          <button\n            className=\"accept__button accept__button-canсel\"\n            onClick={() => setIsAcceptVisible(false)}\n          >\n            canсel\n          </button>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { ToDoList } from './components/ToDoList';\nimport { Footer } from './components/Footer';\nimport { Accept } from './components/Accept';\nimport { Context } from './context';\n\nexport function App() {\n  const [todos, setTodos] = useState([]);\n\n  const filters = {\n    All: 'all',\n    Active: 'active',\n    Completed: 'completed',\n  };\n\n  const [statusToShow, setStatusToShow] = useState(filters.All);\n  const [newTitle, setNewToDoTitle] = useState('');\n  const [isAcceptVisible, setIsAcceptVisible] = useState(false);\n\n  const active = todos.filter(todo => todo.completed === false);\n  const completed = todos.filter(todo => todo.completed === true);\n\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem('todos'))) {\n      setTodos(JSON.parse(localStorage.getItem('todos')));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  function toDosToShow() {\n    switch (statusToShow) {\n      case filters.Completed:\n        return completed;\n\n      case filters.Active:\n        return active;\n\n      default:\n        return todos;\n    }\n  }\n\n  function addTodo(event) {\n    if (newTitle.trim().length > 0) {\n      setTodos([\n        ...todos,\n        { title: newTitle, id: +new Date(), completed: false },\n      ]);\n      setNewToDoTitle('');\n    }\n  }\n\n  const changeTodoStatus = (todoId) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return { ...todo, completed: !todo.completed };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeTodoTitle = (todoId, newTitleToSet) => {\n    setTodos(todos.map((todo) => {\n      if (todo.id === todoId) {\n        return { ...todo, title: newTitleToSet };\n      }\n\n      return todo;\n    }));\n  };\n\n  const changeAllTodosStatus = (statusToSet) => {\n    setTodos(todos.map(\n      todo => ({ ...todo, completed: statusToSet }),\n    ));\n\n    if (statusToShow !== filters.All) {\n      if (statusToSet) {\n        setStatusToShow(filters.Completed);\n      } else {\n        setStatusToShow(filters.Active);\n      }\n    }\n  };\n\n  const removeTodo = (todoId) => {\n    setTodos(todos.filter(todo => todo.id !== todoId));\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        filters,\n        changeTodoStatus,\n        removeTodo,\n        changeTodoTitle,\n      }}\n    >\n\n      <section className=\"todoapp\">\n\n        {isAcceptVisible && (\n          <Accept\n            setIsAcceptVisible={setIsAcceptVisible}\n            changeAllTodosStatus={changeAllTodosStatus}\n          />\n        )}\n\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form>\n            <input\n              type=\"text\"\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              value={newTitle}\n              onChange={event => setNewToDoTitle(event.target.value)}\n              onKeyDown={(event) => {\n                if (event.key === 'Enter') {\n                  event.preventDefault();\n                  addTodo(event);\n                }\n              }}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n\n          {todos.length > 0 && (\n            <>\n              <input\n                type=\"checkbox\"\n                id=\"toggle-all\"\n                className=\"toggle-all\"\n                checked={active.length === 0}\n                onClick={() => setIsAcceptVisible(true)}\n              />\n              <label htmlFor=\"toggle-all\">\n                Mark all as complete\n              </label>\n            </>\n          )}\n\n          <ToDoList\n            toDosToShow={toDosToShow()}\n          />\n\n        </section>\n        {todos.length > 0 && (\n          <Footer\n            filters={filters}\n            todos={todos}\n            setTodos={setTodos}\n            active={active}\n            statusToShow={statusToShow}\n            setStatusToShow={setStatusToShow}\n          />\n        )}\n      </section>\n\n    </Context.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}